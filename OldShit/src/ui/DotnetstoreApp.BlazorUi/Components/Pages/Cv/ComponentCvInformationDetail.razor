@using DotnetstoreApp.CV.Information
@using DotnetstoreApp.SDK.Enums
@using DotnetstoreApp.SDK.Responses.CV

@inject ICvInformationService CvInformationService
@inject NavigationManager NavigationManager

<MudDivider/>
<MudCard>
    <MudCardHeader><MudText Typo="Typo.h5" Class="mb-4"><span>@CvHelpers.GetInformationTypeName(InformationType)</span></MudText></MudCardHeader>
    <MudCardContent>
        @if(InformationList.Count == 0)
        {
            <MudText Typo="Typo.body2" Class="mb-4">Du har inte registrerat någon information än. Klicka på "Lägg till" nedan för att lägga till information.</MudText>
        }
        else
        {
            <MudTable Items="@InformationList.OrderBy(x => x.Name)">
                <ColGroup>
                    <col style="width: 300px;"/>
                    <col/>
                </ColGroup>
                <RowTemplate>
                    <MudTd DataLabel="Name" Style="width: 300px"><MudText Typo="Typo.body2" Class="mb-4">@context.Name</MudText></MudTd>
                    <MudTd DataLabel="Action">
                        <MudButton Color="Color.Error" 
                                   StartIcon="@Icons.Material.Filled.Delete"
                                   data-id="@InformationType.ToString()"
                                   data-testid="delete_information_button" 
                                   Variant="Variant.Filled" 
                                   OnClick="@(async () => await DeleteInformation(context))">
                            Radera
                        </MudButton>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </MudCardContent>
    <MudCardActions>
        <MudButton 
            Color="Color.Success" 
            StartIcon="@Icons.Material.Filled.Add" 
            data-id="@InformationType.ToString()"
            data-testid="add_information_button"
            Variant="Variant.Filled" 
            OnClick="@(() => AddInformation())">
            Lägg till
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter] public Guid CvId { get; set; }
    [Parameter] public CvInformationType InformationType { get; set; }
    [Parameter] public List<CvInformationResponse> InformationList { get; set; } = [];

    private async ValueTask DeleteInformation(CvInformationResponse context)
    {
        await CvInformationService.DeleteAsync(context.Id);
        NavigationManager.NavigateTo($"/cv/{context.CvId}", true);
    }

    private void AddInformation()
    {
        NavigationManager.NavigateTo($"/cv/information/add/{CvId}/{InformationType}");
    }
}